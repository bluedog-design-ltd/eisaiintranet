{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @ingroup templates
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{% set classes = [
  node.bundle|clean_class,
  node.isPromoted() ? 'is-promoted',
  node.isSticky() ? 'is-sticky',
  not node.isPublished() ? 'is-unpublished',
  view_mode ? view_mode|clean_class,
  'clearfix',
] %}
{% set relevance = "27" %}
{% if company_id %}
  {% set relevance = relevance~","~company_id %}
{% endif %}
{% if emea_team_id %}
  {% set relevance = relevance~","~emea_team_id %}
{% endif %}

{% if content.field_name[0] %}
  <ul>
    {% for key, item in content.field_name if key|first != '#' %}
      <li>{{ item }}</li>
    {% endfor %}
  </ul>
{% endif %}

<!--<h1>{{ relevance }} :: {{ company_id }} :: {{ emea_team_id }}</h1>-->
<article{{ attributes.addClass(classes) }}>

  {{ title_prefix }}
  {% if not page %}
    <h2{{ title_attributes }}>
      <a href="{{ url }}" rel="bookmark">{{ label }}</a>
    </h2>
  {% endif %}
  {{ title_suffix }}


  <div class="row slider-hero-row">
    {{ drupal_view('news_slider_hero', 'news_slider_hero_block') }}
  </div>

  <div class="container">

    <div class="row">
      {# 27 is Everyone ('all') #}

      <div class="col-xs-12 col-md-5">{{ drupal_view('news_slider_box', 'news_slider_box_block', relevance) }}</div>
      <div class="col-xs-12 col-md-7">
        <div class="row">
          <div class="col-xs-6 col-md-4">
            <div id="user-hub-box" class="dashboard-box user-hub-box {{ emea_team_name }}">

              <div class="stick-to-bottom">

                {% if not user_id %}
                  <!--<a id="popup-select-team">POPUP???</a>-->
                  <h2><a href="/user/login">Login</a></h2>

                {% else %}

                  {% if emea_team_name %}
                    <h2><a href="{{ emea_team_hub_link }}">{{ emea_team_name }} Hub</a></h2>
                  {% endif %}


                  <a class="use-ajax" data-accepts="application/vnd.drupal-modal"
                     href="/eisai_intranet_controllers/selectteam">Change your team</a>
                {% endif %}

              </div>
            </div>
          </div>
          <div class="col-xs-6 col-md-4">
            <div class="dashboard-box hhc-box">
              <div class="stick-to-bottom"><h2><a href="/our-company/hhc-one-percent"><em>hhc</em></a></h2></div>
            </div>
          </div>
          <div class="col-xs-6 col-md-4">
            <div class="dashboard-box help-box">
              <div class="stick-to-bottom"><h2><a href="/help-documentation/intranet-help-hub">Help</a></h2></div>
            </div>
          </div>


        </div>
      </div>
    </div>
  </div>

  <hr/>
  <div class="container">

    <div class="row">
      <div class="col-xs-12 col-md-5">
        <!--<h2><a href="/events">Upcoming events</a>  ({{ relevance }}) </h2>-->
        <h2>My events</h2>
        <!--<p><a class="small-link" href="/user/{{ user_id }}/edit">edit</a></p>-->
      </div>
      <div class="col-xs-12 col-md-7">
        {# 27 is Everyone ('all') #}
        {# {{ drupal_view('event_calendar', 'event_calendar_block', company_id, emea_team_id, 27 ) }} #}
        {{ drupal_view('event_calendar', 'event_calendar_block', relevance ) }}
      </div>


    </div>
  </div>
  <hr/>

  <div class="container">

    <div class="row">
      <div class="col-xs-12 col-md-5">
        <h2>My shortcuts</h2>
        <!--<p><a class="small-link" href="/user/{{ user_id }}/edit">edit</a></p>-->
      </div>
      <div class="col-xs-12 col-md-7 user-shortcuts">
        {{ drupal_view('my_shortcuts', 'my_shortcuts_block') }}
      </div>


    </div>


  </div>

</article>